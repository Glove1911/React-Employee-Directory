{"version":3,"sources":["utils/Api.js","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["axios","get","Header","class","App","useState","allEmps","filteredEmps","searchTerm","asc","empList","setEmpList","useEffect","Api","then","response","console","log","data","results","pplToDisplay","length","type","id","name","onChange","e","target","value","map","oneEmp","first","substring","toLowerCase","push","for","className","scope","onClick","compare","a","b","sorted","sort","last","src","picture","thumbnail","alt","email","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d5371248.chunk.js","sourcesContent":["import axios from 'axios';\n\nexport default {\n    employees: function () {\n        return axios.get(\"https://randomuser.me/api/?results=200\");\n    }\n}","import React from 'react';\n\nfunction Header() {\n    return (\n      <div>\n        <h1 class= \"text-center\">Employee Directory</h1>\n      </div>\n    );\n  }\n  \n  export default Header;","// import logo from './logo.svg';\nimport './App.css';\nimport Api from \"./utils/Api.js\";\nimport React, { useState, useEffect } from 'react';\nimport Header from \"./components/Header.js\"\n\nconst tableStyle  = {\n  width: \"100%\"\n}\nfunction App() {\n  const [empList, setEmpList] = useState(\n    {\n      allEmps: [],\n      filteredEmps: [],\n      searchTerm: '',\n      asc: false\n    }\n  );\n\n\n\n  useEffect(() => {\n    Api.employees().then(response => {\n      console.log(response.data.results);\n      setEmpList({ ...empList, allEmps: response.data.results })\n    })\n  }, []);\n\n  const handleSort = () => {\n\n    if (empList.asc === true) {\n\n      function compare(a, b) {\n        if (a.name.first > b.name.first) return 1;\n        if (b.name.first > a.name.first) return -1;\n\n        return 0;\n      }\n      var sorted = empList.allEmps.sort(compare)\n      console.log(sorted);\n      setEmpList({ ...empList, allEmps: sorted, asc: !empList.asc })\n\n    } else {\n\n      function compare(a, b) {\n        if (a.name.first > b.name.first) return -1;\n        if (b.name.first > a.name.first) return 1;\n\n        return 0;\n      }\n      let sorted = empList.allEmps.sort(compare)\n      console.log(sorted);\n      setEmpList({ ...empList, allEmps: sorted, asc: !empList.asc })\n\n    }\n\n\n  }\n\n  const handleTyping = (e) => {\n    console.log(e.target.value);\n    let filteredEmps = []\n    empList.allEmps.map((oneEmp) => {\n      if (oneEmp.name.first.substring(0, e.target.value.length).toLowerCase() === e.target.value.toLowerCase()) {\n        filteredEmps.push(oneEmp);\n      }\n\n    })\n    console.log(filteredEmps);\n    setEmpList({ ...empList, filteredEmps: filteredEmps, searchTerm: e.target.value })\n\n    //if()\n\n\n\n    /// sift thru the array of emplys and pick off only the T's\n\n    // update the state with our new array of emps tha tonly have the T's\n\n  }\n\n  var pplToDisplay = empList.allEmps\n\n  if (empList.filteredEmps.length > 0) {\n    pplToDisplay = empList.filteredEmps\n  } else if (empList.searchTerm.length > 0 && empList.filteredEmps.length == 0) {\n    pplToDisplay = []\n  }\n\n\n\n  console.log('THIS IS OUR STATE', empList);\n  return (\n\n    <div>\n      <Header/>\n      <input type =\"text\" id=\"filter\" name=\"fitler\"onChange={handleTyping}></input>\n      <label for=\"filter\">Begin Typing to Filter</label>\n      <table className=\"table\">\n  <thead>\n    <tr>\n      <th scope=\"col\"> <button id=\"caret\"onClick={handleSort}><i class=\"fa fa-fw fa-sort\"></i></button>First Name</th>\n      <th scope=\"col\">Last Name</th>\n      <th scope=\"col\">Image</th>\n      <th scope=\"col\">Email</th>\n     \n    </tr>\n  </thead>\n  <tbody>\n  {pplToDisplay.map((oneEmp) => {\n          return (\n            <tr>\n              <td>{oneEmp.name.first}</td>\n              <td>{oneEmp.name.last}</td>\n              <td><img src={oneEmp.picture.thumbnail} alt=\"\"/></td>\n              <td>{oneEmp.email}</td>\n            </tr>\n\n          )\n        })}\n  </tbody>\n</table>\n        {/* {pplToDisplay.map((oneEmp) => {\n          return (\n            <tr>\n              <td>{oneEmp.name.first}</td>\n              <td>{oneEmp.name.last}</td>\n              <td><img src={oneEmp.picture.thumbnail} alt=\"\"/></td>\n              <td>{oneEmp.email}</td>\n            </tr>\n\n          )\n        })}\n      </table> */}\n\n    </div>);\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}